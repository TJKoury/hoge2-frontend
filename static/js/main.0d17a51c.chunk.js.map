{"version":3,"sources":["components/NoWalletDetected.js","components/NetworkErrorMessage.js","components/ConnectWallet.js","components/Wrap.js","components/Unwrap.js","components/TransactionErrorMessage.js","components/WaitingForTransactionMessage.js","components/Dapp.js","index.js"],"names":["NoWalletDetected","className","href","target","rel","NetworkErrorMessage","message","dismiss","role","type","data-dismiss","aria-label","onClick","aria-hidden","ConnectWallet","connectWallet","networkError","style","Wrap","wrap","marginTop","onSubmit","event","preventDefault","amount","FormData","get","marginLeft","name","required","value","Unwrap","unwrap","TransactionErrorMessage","substring","WaitingForTransactionMessage","txHash","hoge2Address","Dapp","props","initialState","tokenData","undefined","selectedAddress","initialized","hogeBalance","ethers","BigNumber","from","hoge2Balance","txBeingSent","transactionError","state","utils","formatUnits","this","errorMsg","error","textAlign","window","ethereum","_connectWallet","_dismissNetworkError","src","alt","amt","_wrapHoge","display","position","_unwrapHoge2","_dismissTransactionError","_stopPollingData","a","request","method","_checkNetwork","_initialize","on","newAddress","_resetState","userAddress","setState","_initializeEthers","_startPollingData","_provider","providers","Web3Provider","_hoge2","Contract","Hoge2Artifact","abi","getSigner","_hoge","hogeABI","_pollDataInterval","setInterval","_updateBalance","clearInterval","balanceOf","constants","MaxUint256","approve","tx","hash","wait","status","Error","code","console","parseUnits","allowance","_approveHoge2","data","log","networkVersion","netv","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d17a51c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function NoWalletDetected() {\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-6 p-4 text-center\">\n          <p>\n            No Ethereum wallet was detected. <br />\n            Please install{\" \"}\n            <a\n              href=\"http://metamask.io\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              MetaMask\n            </a>\n            .\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function NetworkErrorMessage({ message, dismiss }) {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      {message}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={dismiss}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { NetworkErrorMessage } from \"./NetworkErrorMessage\";\n\nexport function ConnectWallet({ connectWallet, networkError, dismiss }) {\n  return (\n    <div className=\"container\" style={{\"height\": \"70px\"}}>\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-12 text-center\">\n          {/* Metamask network should be set to Localhost:8545. */}\n          {networkError && (\n            <NetworkErrorMessage \n              message={networkError} \n              dismiss={dismiss} \n            />\n          )}\n        </div>\n        <div className=\"col-6 p-4 text-center\">\n          <p>Please connect to your wallet.</p>\n          <button\n            className=\"btn btn-warning\"\n            type=\"button\"\n            onClick={connectWallet}\n          >\n            Connect Wallet\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Wrap({ wrap }) {\n  return (\n    <div style={{marginTop: \"20px\"}}>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          const formData = new FormData(event.target);\n          const amount = formData.get(\"amount\");\n          wrap(amount);\n        }}\n      >\n        <div className=\"form-group\" >\n          <label>Amount to wrap:</label>\n        </div>\n        <div  className=\"form-group\">\n          <input style={{marginLeft: \"20%\", \"width\": \"50%\", \"float\": \"left\"}} \n          className=\"form-control\" type=\"text\" name=\"amount\" required />\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Wrap\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Unwrap({ unwrap }) {\n  return (\n    <div style={{marginTop: \"20px\"}}>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          const formData = new FormData(event.target);\n          const amount = formData.get(\"amount\");\n          unwrap(amount);\n        }}\n      >\n        <div className=\"form-group\">\n          <label>Amount to unwrap:</label>\n        </div>\n        <div className=\"form-group\">\n          <input style={{marginLeft: \"20%\", \"width\": \"50%\", \"float\": \"left\"}} \n            className=\"form-control\" type=\"text\" name=\"amount\" required />\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Unwrap\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function TransactionErrorMessage({ message, dismiss }) {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      Error sending transaction: {message.substring(0, 100)}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={dismiss}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function WaitingForTransactionMessage({ txHash }) {\n  return (\n    <div className=\"alert alert-info\" role=\"alert\">\n      Waiting for transaction <strong>{txHash}</strong> to be mined\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ethers } from \"ethers\";\nimport Hoge2Artifact from \"../contracts/Hoge2.json\";\nimport hogeABI from \"../contracts/hogeABI.json\";\nimport { NoWalletDetected } from \"./NoWalletDetected\";\nimport { ConnectWallet } from \"./ConnectWallet\";\nimport { Loading } from \"./Loading\";\nimport { ContractButton } from \"./ContractButton\";\nimport { Wrap } from \"./Wrap\";\nimport { Unwrap } from \"./Unwrap\";\nimport { TransactionErrorMessage } from \"./TransactionErrorMessage\";\nimport { WaitingForTransactionMessage } from \"./WaitingForTransactionMessage\";\nconst  hogeAddress  = \"0xfad45e47083e4607302aa43c65fb3106f1cd7607\";\nconst  hoge2Address = \"0x25699C4b6bbF148A8FDb4b5823e8D9BbA44C8090\"\n\nconst ERROR_CODE_TX_REJECTED_BY_USER = 4001;\n\nexport class Dapp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n\n      tokenData: undefined,\n      selectedAddress: undefined,\n      initialized: false,\n      hogeBalance: ethers.BigNumber.from(\"0\"),\n      hoge2Balance: ethers.BigNumber.from(\"0\"),\n      txBeingSent: undefined,\n      transactionError: undefined,\n      networkError: undefined,\n    };\n\n    this.state = this.initialState;\n  }\n\n  render() {\n\n\n\n    const hogeBalance  = ethers.utils.formatUnits(this.state.hogeBalance, 9);\n    const hoge2Balance = ethers.utils.formatUnits(this.state.hoge2Balance, 9);\n\n    let errorMsg = null\n    if (this.state.transactionError) {\n      if (this.state.transactionError.error && this.state.transactionError.error.message) {\n        errorMsg = this.state.transactionError.error.message;\n      } else {\n        errorMsg = \"Transaction Canceled.\";\n      }\n    }\n\n    return (\n      <div className=\"container p-4\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n          <div style={{textAlign: \"center\"}}>\n            <h1 >HOGE 2.0 UN/WRAPPING STATION</h1>\n\n            {(window.ethereum === undefined) &&\n              <NoWalletDetected />\n            }\n\n            {this.state.initialized || <ConnectWallet \n              connectWallet={() => this._connectWallet()} \n              networkError={this.state.networkError}\n              dismiss={() => this._dismissNetworkError()}\n            />}\n           {this.state.initialized && <div style={{\"height\": \"70px\", \"padding\": \"20px 0\"}}>\n              Using address: <b>{this.state.selectedAddress}.</b>\n            </div>}\n          </div>\n          <div style={{marginTop: \"40px\", \"textAlign\": \"center\"}}>\n            <div style={{\"width\": \"50%\", \"height\": \"350px\", \"float\": \"left\", \"background\": \"lightgreen\"}}> \n              <img src=\"hoge.png\" alt=\"Hoge\"/>\n              <div>BALANCE: {hogeBalance} HOGE</div>\n              {this.state.initialized && <Wrap wrap={(amt) => this._wrapHoge(amt)}/>}\n            </div>\n            <img src=\"arrow.png\" style={{display: \"block\", \"width\":\"60px\", \"height\":\"100px\", \"left\": \"50%\", \"top\": \"50%\", \"transform\": \"translate(-50%, -50%)\", position: \"absolute\"}} />\n            <div style={{marginLeft: \"50%\", \"height\": \"350px\", \"background\": \"pink\"}}> \n              <img src=\"hoge2.png\" alt=\"Hoge2\"/>\n              <div>BALANCE: {hoge2Balance} HOGE2</div>\n              {this.state.initialized && <Unwrap unwrap={(amt) => this._unwrapHoge2(amt)}/>}\n            </div>\n          </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {this.state.txBeingSent && (\n              <WaitingForTransactionMessage txHash={this.state.txBeingSent} />\n            )}\n            {this.state.transactionError && (\n              <TransactionErrorMessage\n                message={errorMsg}\n                dismiss={() => this._dismissTransactionError()}\n              />\n            )}\n          </div>\n        </div>\n        HOGE2 is a tax-free token backed 1-to-1 by HOGE. It is compatible with <a href=\"https://app.uniswap.org/#/swap?use=V3&inputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&outputCurrency=0x25699C4b6bbF148A8FDb4b5823e8D9BbA44C8090&chain=mainnet\">Uniswap V3</a> and makes it cheaper to speculate on HOGE without touching a centralized exchange.\n        Please see the code on <a href=\"https://etherscan.io/address/0x25699c4b6bbf148a8fdb4b5823e8d9bba44c8090#code#F1#L1\">EtherScan</a>.\n        Wrapping requires an \"approve\" step due to line 19.\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    this._stopPollingData();\n  }\n\n  async _connectWallet() {\n    const [selectedAddress] = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    if (!this._checkNetwork()) {\n      return;\n    }\n\n    this._initialize(selectedAddress);\n\n    window.ethereum.on(\"accountsChanged\", ([newAddress]) => {\n      this._stopPollingData();\n\n      if (newAddress === undefined) {\n        return this._resetState();\n      }\n      \n      this._initialize(newAddress);\n    });\n    \n    window.ethereum.on(\"chainChanged\", ([networkId]) => {\n      this._stopPollingData();\n      this._resetState();\n    });\n  }\n\n  _initialize(userAddress) {\n    // This method initializes the dapp\n\n    this.setState({\n      selectedAddress: userAddress,\n      initialized: true\n    });\n\n    this._initializeEthers();\n    this._startPollingData();\n  }\n\n  async _initializeEthers() {\n    this._provider = new ethers.providers.Web3Provider(window.ethereum);\n \n    this._hoge2 = new ethers.Contract(\n      hoge2Address,\n      Hoge2Artifact.abi,\n      this._provider.getSigner(0)\n    );\n\n    this._hoge = new ethers.Contract(\n      hogeAddress,\n      hogeABI,\n      this._provider.getSigner(0)\n    );\n  }\n\n\n  _startPollingData() {\n    this._pollDataInterval = setInterval(() => this._updateBalance(), 1000);\n    this._updateBalance();\n  }\n\n  _stopPollingData() {\n    clearInterval(this._pollDataInterval);\n    this._pollDataInterval = undefined;\n  }\n\n  async _updateBalance() {\n    const hogeBalance               = await this._hoge.balanceOf(this.state.selectedAddress);\n    const hoge2Balance              = await this._hoge2.balanceOf(this.state.selectedAddress);\n\n    this.setState({\n     hogeBalance,\n     hoge2Balance,\n   });\n  }\n\n  async _approveHoge2() {\n    try {\n\n      this._dismissTransactionError();\n      const amount = ethers.constants.MaxUint256;\n      const tx = await this._hoge.approve(hoge2Address, amount);\n      this.setState({ txBeingSent: tx.hash });\n\n      const receipt = await tx.wait();\n      if (receipt.status === 0) {\n        throw new Error(\"Transaction failed\");\n      } \n      await this._updateBalance();\n    } catch (error) {\n      if (error.code === ERROR_CODE_TX_REJECTED_BY_USER) {\n        return;\n      }\n\n      console.error(error);\n      this.setState({ transactionError: error });\n    } finally {\n      this.setState({ txBeingSent: undefined });\n    }\n  }\n\n  async _wrapHoge(amount) {\n    try {\n\n      this._dismissTransactionError();\n\n      amount = ethers.utils.parseUnits(amount, 9);\n      const allowance = await this._hoge.allowance(this.state.selectedAddress, hoge2Address);\n      if (amount > allowance) {\n        await this._approveHoge2();\n      }\n\n      const tx = await this._hoge2.wrap(amount);\n      this.setState({ txBeingSent: tx.hash });\n\n\n      const receipt = await tx.wait();\n\n      if (receipt.status === 0) {\n        throw new Error(\"Transaction failed\");\n      }\n      await this._updateBalance();\n    } catch (error) {\n      if (error.code === ERROR_CODE_TX_REJECTED_BY_USER) {\n        return;\n      }\n\n      console.error(error);\n      this.setState({ transactionError: error });\n    } finally {\n      this.setState({ txBeingSent: undefined });\n    }\n  }\n\n  async _unwrapHoge2(amount) {\n    try {\n      this._dismissTransactionError();\n      amount = ethers.utils.parseUnits(amount, 9);\n      const tx = await this._hoge2.unwrap(amount);\n      this.setState({ txBeingSent: tx.hash });\n\n      const receipt = await tx.wait();\n\n      if (receipt.status === 0) {\n        throw new Error(\"Transaction failed\");\n      }\n      await this._updateBalance();\n    } catch (error) {\n      if (error.code === ERROR_CODE_TX_REJECTED_BY_USER) {\n        return;\n      }\n\n      console.error(error);\n      this.setState({ transactionError: error });\n    } finally {\n      this.setState({ txBeingSent: undefined });\n    }\n  }\n\n  // This method just clears part of the state.\n  _dismissTransactionError() {\n    this.setState({ transactionError: undefined });\n  }\n\n  // This method just clears part of the state.\n  _dismissNetworkError() {\n    this.setState({ networkError: undefined });\n  }\n\n  // This is an utility method that turns an RPC error into a human readable\n  // message.\n  _getRpcErrorMessage(error) {\n    if (error.data) {\n      return error.data.message;\n    }\n    return error.message;\n  }\n\n  // This method resets the state\n  _resetState() {\n    this.setState(this.initialState);\n  }\n\n  // This method checks if Metamask selected network is Localhost:8545 \n  _checkNetwork() {\n    console.log(window.ethereum.networkVersion);\n    const netv = window.ethereum.networkVersion;\n    if (netv === \"1\" || netv === 1) {\n      return true;\n    }\n\n    this.setState({ \n      networkError: 'Please connect Metamask to ETH MAINNET'\n    });\n\n    return false;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Dapp } from \"./components/Dapp\";\n\n// We import bootstrap here, but you can remove if you want\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// This is the entry point of your application, but it just renders the Dapp\n// react component. All of the logic is contained in it.\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dapp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}